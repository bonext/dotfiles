                ; left side
                
(defwidget leftside []
   (box :class "leftside-container"
        :orientation "horizontal"
        :halign "start"
        (workspaces)))

;; workspace switcher
(defwidget workspaces []
   (box :class "workspaces-widget"
        :orientation "horizontal"
        :spacing 8
        (button
        :onclick "hyprctl dispatch workspace 1"
        "")
        (button
        :onclick "hyprctl dispatch workspace 2"
        "")
        (button
        :onclick "hyprctl dispatch workspace 3"
        "")
        (button
        :onclick "hyprctl dispatch workspace 4"
        "-")
        (button
        :onclick "hyprctl dispatch workspace 5"
        "-")
        (button
        :onclick "hyprctl dispatch workspace 6"
        "-")
        (button
        :onclick "hyprctl dispatch workspace 7"
        "-")
        (button
        :onclick "hyprctl dispatch workspace 8"
        "-")
        (button
        :onclick "hyprctl dispatch workspace 9"
        "")
        (button
        :onclick "hyprctl dispatch workspace 0"
        "")))
        

                ; center

;; TODO: what shall we put here?
(defwidget center []
   (box :class "center-container"
        :orientation "horizontal"
        :hexpand true))   


                ; right side

(defwidget rightside []
   (box :class "rightside-container"
        :orientation "horizontal"
        :space-evenly false
        :spacing 16
        :halign "end"
        :valign "baseline"
        (keyboard_layout)
        (battery)
        (datetime_widget)))
                
;; keyboard_layout widget
(defvar current_layout "en")
(defwidget keyboard_layout []
           (box :class "layout-widget"
                :orientation "h"
                :hexpand false
                (label :halign "end"
                       :text current_layout)))

;; battery widget
;; TODO: refactor ugly separation
(defwidget _battery [battery status charge empty almost-empty about-half almost-full full]
   (label :class "battery-widget"
          :halign "end"
          :text {status == 'Charging' ? charge :
                 battery < 10 ? empty :
                 battery < 30 ? almost-empty :
                 battery < 60 ? about-half :
                 battery < 90 ? almost-full : full}))

(defwidget battery []
   (_battery :status {EWW_BATTERY.CMB1.status}
             :battery {EWW_BATTERY.total_avg}
             ;; beware: these symbols take up extra space
             ;; so right " is not visible (but present)
             :charge "ﮣ"
             :empty ""
             :almost-empty ""
             :about-half ""
             :almost-full ""
             :full ""))

;; datetime widget
(defpoll date :interval "1s" "date '+%b %d, %Y'")
(defpoll time :interval "1s" "date '+ %R'")   
(defwidget datetime_widget []
   (box :class "datetime-widget"
        :orientation "horizontal"
        :halign "end"
        :valign "baseline"
        :space-evenly false
        :spacing 8
        time
        date))


                ; status bar general
                
(defwidget statusbar []
   (box :class "statusbar-box"
        :orientation "horizontal"
        :hexpand false
        :width "100%"
        :halign "fill"
        :valign "baseline"
        (leftside)
        (center)
        (rightside)))

(defwindow statusbar
   :monitor 0 ; how do I put it on every monitor?
   :exclusive true
   :stacking "overlay" ; this probably does not really matter
   :focusable false ; matters for keyboard inputs
   ; geometry
   ; I have to use pixels for height, because I reserve this space in hyprland
   :geometry (geometry :x "0"
               :y "0"
              :width "100%"
              :height "32")
   (statusbar))
